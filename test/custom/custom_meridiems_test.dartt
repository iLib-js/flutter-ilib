import 'package:flutter/material.dart';
import 'package:flutter_ilib/flutter_ilib.dart';
import 'package:flutter_test/flutter_test.dart';

void main() {
  TestWidgetsFlutterBinding.ensureInitialized();
  debugPrint('Testing [flutter_ilib_datefmt_test.dart] file.');
  setUpAll(() async {
    await ILibJS.instance
        .loadJSwithPath('../../assets/js/ilib-all.js');
    ILibJS.instance.initILib();
  });
  group('getMeridiems()', () {
    test('testMeridiem_as_IN', () {
      final ILibDateFmtOptions fmtOptions = ILibDateFmtOptions(locale: 'as-IN');
      final ILibDateFmt fmt = ILibDateFmt(fmtOptions);
      final List<MeridiemsInfo> meridiems = fmt.getMeridiemRange();

      expect(meridiems[0].name, 'AM');
      expect(meridiems[1].name, 'PM');
    });
    test('testMeridiem_hi_IN', () {
      final ILibDateFmtOptions fmtOptions = ILibDateFmtOptions(locale: 'hi-IN');
      final ILibDateFmt fmt = ILibDateFmt(fmtOptions);
      final List<MeridiemsInfo> meridiems = fmt.getMeridiemRange();

      expect(meridiems[0].name, 'AM');
      expect(meridiems[1].name, 'PM');
    });
    test('testMeridiem_kn_IN', () {
      final ILibDateFmtOptions fmtOptions = ILibDateFmtOptions(locale: 'kn-IN');
      final ILibDateFmt fmt = ILibDateFmt(fmtOptions);
      final List<MeridiemsInfo> meridiems = fmt.getMeridiemRange();

      expect(meridiems[0].name, 'AM');
      expect(meridiems[1].name, 'PM');
    });
    test('testMeridiem_bn_IN', () {
      final ILibDateFmtOptions fmtOptions = ILibDateFmtOptions(locale: 'bn-IN');
      final ILibDateFmt fmt = ILibDateFmt(fmtOptions);
      final List<MeridiemsInfo> meridiems = fmt.getMeridiemRange();

      expect(meridiems[0].name, 'AM');
      expect(meridiems[1].name, 'PM');
    });
    test('testMeridiem_gu_IN', () {
      final ILibDateFmtOptions fmtOptions = ILibDateFmtOptions(locale: 'gu-IN');
      final ILibDateFmt fmt = ILibDateFmt(fmtOptions);
      final List<MeridiemsInfo> meridiems = fmt.getMeridiemRange();

      expect(meridiems[0].name, 'AM');
      expect(meridiems[1].name, 'PM');
    });
    test('testMeridiem_ml_IN', () {
      final ILibDateFmtOptions fmtOptions = ILibDateFmtOptions(locale: 'ml-IN');
      final ILibDateFmt fmt = ILibDateFmt(fmtOptions);
      final List<MeridiemsInfo> meridiems = fmt.getMeridiemRange();

      expect(meridiems[0].name, 'AM');
      expect(meridiems[1].name, 'PM');
    });
    test('testMeridiem_mr_IN', () {
      final ILibDateFmtOptions fmtOptions = ILibDateFmtOptions(locale: 'mr-IN');
      final ILibDateFmt fmt = ILibDateFmt(fmtOptions);
      final List<MeridiemsInfo> meridiems = fmt.getMeridiemRange();

      expect(meridiems[0].name, 'AM');
      expect(meridiems[1].name, 'PM');
    });
    test('testMeridiem_or_IN', () {
      final ILibDateFmtOptions fmtOptions = ILibDateFmtOptions(locale: 'or-IN');
      final ILibDateFmt fmt = ILibDateFmt(fmtOptions);
      final List<MeridiemsInfo> meridiems = fmt.getMeridiemRange();

      expect(meridiems[0].name, 'AM');
      expect(meridiems[1].name, 'PM');
    });
    test('testMeridiem_pa_IN', () {
      final ILibDateFmtOptions fmtOptions = ILibDateFmtOptions(locale: 'pa-IN');
      final ILibDateFmt fmt = ILibDateFmt(fmtOptions);
      final List<MeridiemsInfo> meridiems = fmt.getMeridiemRange();

      expect(meridiems[0].name, 'AM');
      expect(meridiems[1].name, 'PM');
    });
    test('testMeridiem_ta_IN', () {
      final ILibDateFmtOptions fmtOptions = ILibDateFmtOptions(locale: 'ta-IN');
      final ILibDateFmt fmt = ILibDateFmt(fmtOptions);
      final List<MeridiemsInfo> meridiems = fmt.getMeridiemRange();

      expect(meridiems[0].name, 'AM');
      expect(meridiems[1].name, 'PM');
    });
    test('testMeridiem_te_IN', () {
      final ILibDateFmtOptions fmtOptions = ILibDateFmtOptions(locale: 'te-IN');
      final ILibDateFmt fmt = ILibDateFmt(fmtOptions);
      final List<MeridiemsInfo> meridiems = fmt.getMeridiemRange();

      expect(meridiems[0].name, 'AM');
      expect(meridiems[1].name, 'PM');
    });
    test('testMeridiem_ur_IN', () {
      final ILibDateFmtOptions fmtOptions = ILibDateFmtOptions(locale: 'ur-IN');
      final ILibDateFmt fmt = ILibDateFmt(fmtOptions);
      final List<MeridiemsInfo> meridiems = fmt.getMeridiemRange();

      expect(meridiems[0].name, 'AM');
      expect(meridiems[1].name, 'PM');
    });
    test('testMeridiem_bs_Latn_BA', () {
      final ILibDateFmtOptions fmtOptions =
          ILibDateFmtOptions(locale: 'bs-Latn-BA');
      final ILibDateFmt fmt = ILibDateFmt(fmtOptions);
      final List<MeridiemsInfo> meridiems = fmt.getMeridiemRange();

      expect(meridiems[0].name, 'prijepodne');
      expect(meridiems[1].name, 'poslijepodne');
    });
    test('testMeridiem_bs_Latn_ME', () {
      final ILibDateFmtOptions fmtOptions =
          ILibDateFmtOptions(locale: 'bs-Latn-ME');
      final ILibDateFmt fmt = ILibDateFmt(fmtOptions);
      final List<MeridiemsInfo> meridiems = fmt.getMeridiemRange();

      expect(meridiems[0].name, 'prijepodne');
      expect(meridiems[1].name, 'poslijepodne');
    });
    test('testMeridiem_sq_AL', () {
      final ILibDateFmtOptions fmtOptions = ILibDateFmtOptions(locale: 'sq-AL');
      final ILibDateFmt fmt = ILibDateFmt(fmtOptions);
      final List<MeridiemsInfo> meridiems = fmt.getMeridiemRange();

      expect(meridiems[0].name, 'të paradites');
      expect(meridiems[1].name, 'të pasdites');
    });
    test('testMeridiem_sq_ME', () {
      final ILibDateFmtOptions fmtOptions = ILibDateFmtOptions(locale: 'sq-ME');
      final ILibDateFmt fmt = ILibDateFmt(fmtOptions);
      final List<MeridiemsInfo> meridiems = fmt.getMeridiemRange();

      expect(meridiems[0].name, 'të paradites');
      expect(meridiems[1].name, 'të pasdites');
    });
    test('testMeridiem_pa_PK', () {
      final ILibDateFmtOptions fmtOptions = ILibDateFmtOptions(locale: 'pa-PK');
      final ILibDateFmt fmt = ILibDateFmt(fmtOptions);
      final List<MeridiemsInfo> meridiems = fmt.getMeridiemRange();

      expect(meridiems[0].name, 'AM');
      expect(meridiems[1].name, 'PM');
    });
  });
}
